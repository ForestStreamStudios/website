import './IntroText.css.proxy.js';
/* src\IntroText.svelte generated by Svelte v3.31.0 */
import {
	SvelteComponent,
	add_render_callback,
	append,
	attr,
	check_outros,
	create_bidirectional_transition,
	detach,
	element,
	group_outros,
	init,
	insert,
	safe_not_equal,
	set_style,
	text,
	transition_in,
	transition_out
} from "../web_modules/svelte/internal.js";

import { onMount } from "../web_modules/svelte.js";
import { fade } from "../web_modules/svelte/transition.js";

function create_if_block(ctx) {
	let p;
	let t;
	let p_transition;
	let current;

	return {
		c() {
			p = element("p");
			t = text("Welcome to Forest Stream Studios! Our site is still a work in progress, but you can follow our socials to keep in touch while we get things sorted here!");
			set_style(p, "color", /*textColor*/ ctx[0]);
		},
		m(target, anchor) {
			insert(target, p, anchor);
			append(p, t);
			current = true;
		},
		p(ctx, dirty) {
			if (!current || dirty & /*textColor*/ 1) {
				set_style(p, "color", /*textColor*/ ctx[0]);
			}
		},
		i(local) {
			if (current) return;

			add_render_callback(() => {
				if (!p_transition) p_transition = create_bidirectional_transition(p, fade, { duration: 2000 }, true);
				p_transition.run(1);
			});

			current = true;
		},
		o(local) {
			if (!p_transition) p_transition = create_bidirectional_transition(p, fade, { duration: 2000 }, false);
			p_transition.run(0);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(p);
			if (detaching && p_transition) p_transition.end();
		}
	};
}

function create_fragment(ctx) {
	let div;
	let current;
	let if_block = /*loaded*/ ctx[1] && create_if_block(ctx);

	return {
		c() {
			div = element("div");
			if (if_block) if_block.c();
			attr(div, "id", "intro-text");
			set_style(div, "border-bottom", "4px solid " + /*textColor*/ ctx[0]);
			attr(div, "class", "svelte-14wcflt");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			if (if_block) if_block.m(div, null);
			current = true;
		},
		p(ctx, [dirty]) {
			if (/*loaded*/ ctx[1]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*loaded*/ 2) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}

			if (!current || dirty & /*textColor*/ 1) {
				set_style(div, "border-bottom", "4px solid " + /*textColor*/ ctx[0]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o(local) {
			transition_out(if_block);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			if (if_block) if_block.d();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { textColor } = $$props;
	let loaded = false;

	onMount(() => {
		setTimeout(
			() => {
				$$invalidate(1, loaded = true);
			},
			1000
		);
	});

	$$self.$$set = $$props => {
		if ("textColor" in $$props) $$invalidate(0, textColor = $$props.textColor);
	};

	return [textColor, loaded];
}

class IntroText extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { textColor: 0 });
	}
}

export default IntroText;